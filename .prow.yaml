presubmits:
  - name: presubmit-nephio-go-test
    decorate: true
    run_if_changed: "(\\.go|Makefile)$"
    spec:
      containers:
      - image: nephio/gotests:1783899289886396416
        command:
        - make
        args:
        - unit
  - name: presubmit-nephio-golangci-lint
    decorate: true
    run_if_changed: "(\\.go|Makefile)$"
    spec:
      containers:
      - image: nephio/gotests:1783899289886396416
        command:
        - make
        args:
        - lint
  - name: presubmit-nephio-gosec
    decorate: true
    run_if_changed: "(\\.go|Makefile)$"
    spec:
      containers:
      - image: nephio/gotests:1783899289886396416
        command:
        - make
        args:
        - gosec
  - name: presubmit-nephio-license-header-check
    decorate: true
    always_run: true
    spec:
      containers:
      - image: nephio/gotests:1783899289886396416
        command:
        - "/bin/sh"
        - "-c"
        - |
          /usr/local/bin/checklicense.sh > ${ARTIFACTS}/license_headers_results.txt
  - name: presubmit-nephio-scancode-toolkit
    decorate: true
    always_run: true
    spec:
      containers:
      - image: nephio/scancode-toolkit:v31.2.5
        command:
        - "/bin/sh"
        args:
        - "-c"
        - |
          /scancode-toolkit/scancode --ignore "whitelist.json" -clpeui -n 2 --html ${ARTIFACTS}/scancode_report.html . --tallies-with-details
        resources:
          requests:
            cpu: 2
            memory: 1Gi
  - name: presubmit-nephio-fossology
    decorate: true
    always_run: true
    spec:
      containers:
      - image: fossology/fossology:scanner
        command:
        - "/bin/bash"
        args:
        - "-c"
        - |
          /bin/fossologyscanner --report SPDX_JSON repo nomos ojo copyright keyword
          cp -R results ${ARTIFACTS}/    
  - name: presubmit-nephio-lichen
    decorate: true
    run_if_changed: "^.*.go$"
    spec:
      containers:
      - image: nephio/gotests:1783899289886396416
        command:
        - "/usr/local/bin/lichen.sh"

postsubmits:

  
  - name: build-push-nephio-operator-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio Operator Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=operators/nephio-controller-manager/Dockerfile --destination=nephio/nephio-operator:${BUILD_ID} --destination=nephio/nephio-operator:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
                
  - name: build-push-nephio-krm-func-config-inject-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM ConfigInject Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/configinject-fn/Dockerfile --destination=nephio/configinject-fn:${BUILD_ID} --destination=nephio/configinject-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
  
  - name: build-push-nephio-krm-func-dnn-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM DNN Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/dnn-fn/Dockerfile --destination=nephio/dnn-fn:${BUILD_ID} --destination=nephio/dnn-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json

  - name: build-push-nephio-krm-func-gen-configmap-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM GenConfigMap Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/gen-configmap-fn/Dockerfile --destination=nephio/gen-configmap-fn:${PULL_BASE_REF} --destination=nephio/gen-configmap-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
  
  - name: build-push-nephio-krm-func-interface-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM Interface Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/interface-fn/Dockerfile --destination=nephio/interface-fn:${PULL_BASE_REF} --destination=nephio/interface-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json

  - name: build-push-nephio-krm-func-ipam-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM IPAM Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/ipam-fn/Dockerfile --destination=nephio/ipam-fn:${PULL_BASE_REF} --destination=nephio/ipam-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json 
  
  - name: build-push-nephio-krm-func-nad-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM NAD Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/nad-fn/Dockerfile --destination=nephio/nad-fn:${PULL_BASE_REF} --destination=nephio/nad-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
  
  - name: build-push-nephio-krm-func-nfdeploy-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM NfDeploy Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/nfdeploy-fn/Dockerfile --destination=nephio/nfdeploy-fn:${PULL_BASE_REF} --destination=nephio/nfdeploy-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
  
  - name: build-push-nephio-krm-func-ueransim-deploy-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM UeRanSim Deploy Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/ueransim-deploy-fn/Dockerfile --destination=nephio/ueransim-deploy-fn:${PULL_BASE_REF} --destination=nephio/ueransim-deploy-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
 
  - name: build-push-nephio-krm-func-vlan-dev-image
    cluster: default
    always_run: true
    branches:
    - "main"
    annotations:
      description: Build and Push Nephio KRM VLAN Dev Image to DockerHub
    decorate: true
    decoration_config:
      censor_secrets: true
    max_concurrency: 1
    extra_refs:
    - org: nephio-project
      repo: nephio
      base_ref: main
      path_alias: "nephio_build"
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:debug
        command:
        - "/bin/sh"
        - "-c"
        - |
          executor --context=/home/prow/go/src/nephio_build/ --dockerfile=krm-functions/vlan-fn/Dockerfile --destination=nephio/vlan-fn:${PULL_BASE_REF} --destination=nephio/vlan-fn:latest
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json