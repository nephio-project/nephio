apiVersion: fn.kptgen.dev/v1alpha1
kind: Pod
metadata:
  name: controller
  annotations:
    config.kubernetes.io/local-config: "true"
  namespace: nephio-system
spec:
  type: deployment
  replicas: 1
  permissionRequests:
    controller:
      scope: cluster
      permissions:
      - apiGroups: ["*"]
        resources: [events, configmaps, secrets, services]
        verbs: [get, list, watch, update, patch, create, delete]
      - apiGroups: ["coordination.k8s.io"]
        resources: [leases]
        verbs: [get, list, watch, update, patch, create, delete]
    porch:
      scope: cluster
      permissions:
      - apiGroups: [config.porch.kpt.dev]
        resources: [repositories]
        verbs: [get, list, watch, update, patch, create, delete]
      - apiGroups: [config.porch.kpt.dev]
        resources: [repositories/status]
        verbs: [get, list, watch, update, patch, create, delete]
    leader-election:
      permissions:
      - apiGroups: [""]
        resources: [configmaps]
        verbs: [get, list, watch, update, patch, create, delete]
      - apiGroups: [coordination.k8s.io]
        resources: [leases]
        verbs: [get, list, watch, update, patch, create, delete]
      - apiGroups: [""]
        resources: [events]
        verbs: [create, patch]
  template:
    spec:
      containers:
      - name: kube-rbac-proxy
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
      - name: controller
        image: europe-docker.pkg.dev/srlinux/eu.gcr.io/repository-controller:latest
        command:
        - /manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: "POD_IP"
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: "NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: "NODE_IP"
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: "GIT_NAMESPACE"
          value: "gitea"
        - name: "GIT_SECRET_NAME"
          value: "git-user-secret"
        - name: "GIT_SERVICE_NAME"
          value: "gitea-http"
